{{- $webapp := .Values.deployments.webapp }}
{{- range $tag := $webapp.tags }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $webapp.name }}-{{ $tag.version }}
spec:
  replicas: {{ $.Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ $webapp.selectorLabel }}
      version: {{ $tag.version }}
      sidecar.istio.io/inject: "true"
  template:
    metadata:
      labels:
        app: {{ $webapp.selectorLabel }}
        version: {{ $tag.version }}
        sidecar.istio.io/inject: "true"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port: "8080"
    spec:
      containers:
        - name: {{ $webapp.podname }}
          image: "{{ $webapp.repository }}:{{ $tag.tag }}"
          ports:
            - containerPort: {{ $webapp.port }}
          env:
            - name: MODEL-SERVICE-URL
              value: "http://{{ $.Values.services.modelService.name }}:{{ $.Values.services.modelService.port }}"
---
{{- end }}
{{- $modelService := .Values.deployments.modelService }}
{{- range $tag := $modelService.tags }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $modelService.name }}-{{ $tag.version }}
spec:
  replicas: {{ $.Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ $modelService.selectorLabel }}
      version: {{ $tag.version }}
  template:
    metadata:
      labels:
        app: {{ $modelService.selectorLabel }}
        version: {{ $tag.version }}
        sidecar.istio.io/inject: "true"
    spec:
      containers:
        - name: {{ $modelService.podname }}
          image: "{{ $modelService.repository }}:{{ $tag.tag }}"
          ports:
            - containerPort: {{ $modelService.port }}
          env:
            - name: CLASSIFIER_URL
              value: "{{ $modelService.classifierUrl }}"
            - name: VECTORIZER_URL
              value: "{{ $modelService.vectorizerUrl }}"
---
{{- end }}
