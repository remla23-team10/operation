# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

deployments:
  webapp:
    name: app-deployment
    podname: app
    selectorLabel: app
    repository: ghcr.io/remla23-team10/app
    tag: latest
    port: 8080

  modelService:
    name: modelservice-deployment
    podname: modelservice
    selectorLabel: modelservice
    repository: ghcr.io/remla23-team10/model-service
    tag: latest
    port: 8080

services:
  webapp:
    name: app-service
    port: 80
    targetPort: 8080
  
  modelService:
    name: modelservice-service
    port: 80
    targetPort: 8080

serviceMonitor:
  name: app-service-monitor
  interval: 30s

ingress:
  name: app-ingress

deploy-prom-stack: true

# alertmanager config
alertConfig:
  severity: warning # minimum level of severity for notification

# Email configurations. Example using gmail
  emails:
    - name: enriquebarba97              # name of the config
      to: user@gmail.com                # email to send notifications to
      from: reveiver@example.com        # email to send notifications from
      smtp: smtp.gmail.com:587          # smtp server and port
      username: user@gmail.com          # identity for smtp server
      password: "CHANGE-ME"             # password for smtp server
      # See https://support.google.com/accounts/answer/185833?hl=en for more info on Gmail app passwords

kube-prometheus-stack:
  alertmanager:
    config:
      global:
        resolve_timeout: 1m
        # Default smpt server. Ideally same as one of the configs above, but it does not matter
        # since it will use the values from the config.
        # However, the alertmanager refuses to start if there is at least an email config
        # and not a global default smtp server. https://github.com/prometheus/alertmanager/issues/275
        smtp_smarthost: smtp.gmail.com:587

  grafana:
    env:
      GF_SERVER_ROOT_URL: https://localhost:3000/grafana
      GF_SERVER_SERVE_FROM_SUB_PATH: 'true'
    # username is 'admin'
    adminPassword: prom-operator
    defaultDashboardsEnabled: false
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/rewrite-target: /$2
      path: "/grafana(/|$)(.*)"